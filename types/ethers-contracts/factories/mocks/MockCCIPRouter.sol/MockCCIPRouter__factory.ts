/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { MockCCIPRouter, MockCCIPRouterInterface } from "../../../mocks/MockCCIPRouter.sol/MockCCIPRouter.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "messageId",
        "type": "bytes32"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "destinationChainSelector",
        "type": "uint64"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "receiver",
        "type": "bytes"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "data",
        "type": "bytes"
      }
    ],
    "name": "MessageSent",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "destinationChainSelector",
        "type": "uint64"
      },
      {
        "components": [
          {
            "internalType": "bytes",
            "name": "receiver",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct Client.EVMTokenAmount[]",
            "name": "tokenAmounts",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "feeToken",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "extraArgs",
            "type": "bytes"
          }
        ],
        "internalType": "struct Client.EVM2AnyMessage",
        "name": "message",
        "type": "tuple"
      }
    ],
    "name": "ccipSend",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "receiver",
        "type": "address"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "messageId",
            "type": "bytes32"
          },
          {
            "internalType": "uint64",
            "name": "sourceChainSelector",
            "type": "uint64"
          },
          {
            "internalType": "bytes",
            "name": "sender",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct Client.EVMTokenAmount[]",
            "name": "destTokenAmounts",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct Client.Any2EVMMessage",
        "name": "message",
        "type": "tuple"
      }
    ],
    "name": "deliverMessage",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "fee",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint64",
        "name": "destinationChainSelector",
        "type": "uint64"
      },
      {
        "components": [
          {
            "internalType": "bytes",
            "name": "receiver",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "internalType": "struct Client.EVMTokenAmount[]",
            "name": "tokenAmounts",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "feeToken",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "extraArgs",
            "type": "bytes"
          }
        ],
        "internalType": "struct Client.EVM2AnyMessage",
        "name": "message",
        "type": "tuple"
      }
    ],
    "name": "getFee",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "processedMessages",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052662386f26fc1000060015534801561001a575f80fd5b5061066a806100285f395ff3fe608060405260043610610049575f3560e01c806320487ded1461004d5780636521c1e01461008257806388ba16ab146100a357806396f4e9f9146100e1578063ddca3f43146100f4575b5f80fd5b348015610058575f80fd5b5061006f61006736600461031a565b505060015490565b6040519081526020015b60405180910390f35b34801561008d575f80fd5b506100a161009c36600461037b565b610109565b005b3480156100ae575f80fd5b506100d16100bd366004610395565b5f6020819052908152604090205460ff1681565b6040519015158152602001610079565b61006f6100ef36600461031a565b6101ea565b3480156100ff575f80fd5b5061006f60015481565b5f826001600160a01b031682604051602401610125919061046c565b60408051601f198184030181529181526020820180516001600160e01b03166385572ffb60e01b1790525161015a9190610543565b5f604051808303815f865af19150503d805f8114610193576040519150601f19603f3d011682016040523d82523d5f602084013e610198565b606091505b50509050806101e55760405162461bcd60e51b815260206004820152601460248201527310d0d2540819195b1a5d995c9e4819985a5b195960621b60448201526064015b60405180910390fd5b505050565b5f6001543410156102305760405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b60448201526064016101dc565b5f8361023c848061056f565b610249602087018761056f565b4260405160200161025f969594939291906105b2565b60408051601f1981840301815291815281516020928301205f818152928390529120805460ff191660011790559050807fdc1a8fd80399fd11ac209f2989b373b9b70d8757d959d9da86be174269863689856102bb868061056f565b6102c8602089018961056f565b6040516102d99594939291906105f2565b60405180910390a29392505050565b803567ffffffffffffffff811681146102ff575f80fd5b919050565b5f60a08284031215610314575f80fd5b50919050565b5f806040838503121561032b575f80fd5b610334836102e8565b9150602083013567ffffffffffffffff81111561034f575f80fd5b61035b85828601610304565b9150509250929050565b80356001600160a01b03811681146102ff575f80fd5b5f806040838503121561038c575f80fd5b61033483610365565b5f602082840312156103a5575f80fd5b5035919050565b5f808335601e198436030181126103c1575f80fd5b830160208101925035905067ffffffffffffffff8111156103e0575f80fd5b8036038213156103ee575f80fd5b9250929050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b8183525f60208085019450825f5b85811015610461576001600160a01b0361044483610365565b16875281830135838801526040968701969091019060010161042b565b509495945050505050565b60208152813560208201525f610484602084016102e8565b67ffffffffffffffff80821660408501526104a260408601866103ac565b925060a060608601526104b960c0860184836103f5565b9250506104c960608601866103ac565b601f19808786030160808801526104e18583856103f5565b945060808801359250601e198836030183126104fb575f80fd5b60209288019283019235915083821115610513575f80fd5b8160061b3603831315610524575f80fd5b8685030160a087015261053884828461041d565b979650505050505050565b5f82515f5b818110156105625760208186018101518583015201610548565b505f920191825250919050565b5f808335601e19843603018112610584575f80fd5b83018035915067ffffffffffffffff82111561059e575f80fd5b6020019150368190038213156103ee575f80fd5b60c087901b6001600160c01b0319168152848660088301375f858201600881015f8152858782375060089401938401929092525050602801949350505050565b67ffffffffffffffff86168152606060208201525f6106156060830186886103f5565b82810360408401526106288185876103f5565b9897505050505050505056fea26469706673582212200bb13b0296d37e4cca88731e6378c8a309b820335d62d297c4b48c00f036d41f64736f6c63430008180033";

  
      type MockCCIPRouterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MockCCIPRouterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MockCCIPRouter__factory extends ContractFactory {
    
      constructor(...args: MockCCIPRouterConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<MockCCIPRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MockCCIPRouter__factory {
      return super.connect(runner) as MockCCIPRouter__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MockCCIPRouterInterface {
      return new Interface(_abi) as MockCCIPRouterInterface;
    }
    
    override attach(address: string | Addressable): MockCCIPRouter {
      return super.attach(address) as MockCCIPRouter;
    }
  static connect(address: string, runner?: ContractRunner | null): MockCCIPRouter {
      return new Contract(address, _abi, runner) as unknown as MockCCIPRouter;
    }
  }

  
  