/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IVotingMirror, IVotingMirrorInterface } from "../../../contracts/ClaimManager.sol/IVotingMirror.js";

  const _abi = [
  {
    "inputs": [],
    "name": "totalPower",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "vPowerOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class IVotingMirror__factory {
    static readonly abi = _abi;
    static createInterface(): IVotingMirrorInterface {
      return new Interface(_abi) as IVotingMirrorInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IVotingMirror {
      return new Contract(address, _abi, runner) as unknown as IVotingMirror;
    }
  }
  