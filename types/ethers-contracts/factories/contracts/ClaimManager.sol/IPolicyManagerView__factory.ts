/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IPolicyManagerView, IPolicyManagerViewInterface } from "../../../contracts/ClaimManager.sol/IPolicyManagerView.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "policyId",
        "type": "bytes32"
      }
    ],
    "name": "policies",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "poolId",
        "type": "bytes32"
      },
      {
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "coverageAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint64",
        "name": "startTs",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "endTs",
        "type": "uint64"
      },
      {
        "internalType": "bytes32",
        "name": "policyRef",
        "type": "bytes32"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "active",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class IPolicyManagerView__factory {
    static readonly abi = _abi;
    static createInterface(): IPolicyManagerViewInterface {
      return new Interface(_abi) as IPolicyManagerViewInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IPolicyManagerView {
      return new Contract(address, _abi, runner) as unknown as IPolicyManagerView;
    }
  }
  